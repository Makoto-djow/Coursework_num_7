version: '3'

services:
  redis:
    image: redis
    env_file:
      - .env
    expose:
      - "6379"

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD = os.getenv('POSTGRES_PASSWORD'),
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    container_name: db
    expose:
      - "5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy

  celery:
    env_file:
      - .env
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    env_file:
      - .env
    build: .
    restart: on-failure
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  pg_data: